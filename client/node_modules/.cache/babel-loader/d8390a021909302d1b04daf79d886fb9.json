{"ast":null,"code":"const OpenTok = require('opentok'); // Handling all of our errors here by alerting them\n\n\nexport function handleError(error) {\n  if (error) {\n    alert(error.message);\n  }\n}\nexport function initializeSession(apiKey, sessionId, token) {\n  var session = OT.initSession(apiKey, sessionId); // Subscribe to a newly created stream\n\n  session.on('streamCreated', function (event) {\n    session.subscribe(event.stream, 'subscriber', {\n      insertMode: 'append',\n      width: '100%',\n      height: '100%'\n    }, handleError);\n  }); // Create a publisher\n\n  var publisher = OT.initPublisher('publisher', {\n    insertMode: 'append',\n    width: '100%',\n    height: '100%'\n  }, handleError); // Connect to the session\n\n  session.connect(token, function (error) {\n    // If the connection is successful, publish to the session\n    if (error) {\n      handleError(error);\n    } else {\n      session.publish(publisher, handleError);\n    }\n  });\n}","map":{"version":3,"names":["OpenTok","require","handleError","error","alert","message","initializeSession","apiKey","sessionId","token","session","OT","initSession","on","event","subscribe","stream","insertMode","width","height","publisher","initPublisher","connect","publish"],"sources":["/Users/megnabiederman/Desktop/GamerECSAMPLE/client/src/components/Stream.js"],"sourcesContent":["const OpenTok = require('opentok');\n\n// Handling all of our errors here by alerting them\nexport function handleError(error) {\n    if (error) {\n      alert(error.message);\n        \n    }\n  }\n  \n\nexport function initializeSession(apiKey, sessionId, token) {\n    var session = OT.initSession(apiKey, sessionId);\n      \n    // Subscribe to a newly created stream\n    \n    session.on('streamCreated', function(event) {\n      session.subscribe(event.stream, 'subscriber', {\n            insertMode: 'append',\n            width: '100%',\n            height: '100%'\n      }, handleError);\n    });\n           \n  \n    // Create a publisher\n    var publisher = OT.initPublisher('publisher', {\n        insertMode: 'append',\n        width: '100%',\n        height: '100%'\n    }, handleError);\n    \n    // Connect to the session\n    session.connect(token, function(error) {\n      // If the connection is successful, publish to the session\n      if (error) {\n        handleError(error);\n      } else {\n        session.publish(publisher, handleError);\n      }\n    });\n  \n    \n  }"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB,C,CAEA;;;AACA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAC/B,IAAIA,KAAJ,EAAW;IACTC,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;EAED;AACF;AAGH,OAAO,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,SAAnC,EAA8CC,KAA9C,EAAqD;EACxD,IAAIC,OAAO,GAAGC,EAAE,CAACC,WAAH,CAAeL,MAAf,EAAuBC,SAAvB,CAAd,CADwD,CAGxD;;EAEAE,OAAO,CAACG,EAAR,CAAW,eAAX,EAA4B,UAASC,KAAT,EAAgB;IAC1CJ,OAAO,CAACK,SAAR,CAAkBD,KAAK,CAACE,MAAxB,EAAgC,YAAhC,EAA8C;MACxCC,UAAU,EAAE,QAD4B;MAExCC,KAAK,EAAE,MAFiC;MAGxCC,MAAM,EAAE;IAHgC,CAA9C,EAIGjB,WAJH;EAKD,CAND,EALwD,CAcxD;;EACA,IAAIkB,SAAS,GAAGT,EAAE,CAACU,aAAH,CAAiB,WAAjB,EAA8B;IAC1CJ,UAAU,EAAE,QAD8B;IAE1CC,KAAK,EAAE,MAFmC;IAG1CC,MAAM,EAAE;EAHkC,CAA9B,EAIbjB,WAJa,CAAhB,CAfwD,CAqBxD;;EACAQ,OAAO,CAACY,OAAR,CAAgBb,KAAhB,EAAuB,UAASN,KAAT,EAAgB;IACrC;IACA,IAAIA,KAAJ,EAAW;MACTD,WAAW,CAACC,KAAD,CAAX;IACD,CAFD,MAEO;MACLO,OAAO,CAACa,OAAR,CAAgBH,SAAhB,EAA2BlB,WAA3B;IACD;EACF,CAPD;AAUD"},"metadata":{},"sourceType":"module"}