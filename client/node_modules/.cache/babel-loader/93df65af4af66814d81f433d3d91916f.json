{"ast":null,"code":"var _jsxFileName = \"/Users/megnabiederman/Desktop/GamerECSAMPLE/client/src/components/Subscriber.js\";\nimport React from 'react';\nimport '../style/Video.css';\nimport { OTSubscriber, OTSession, OTStreams } from 'opentok-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Subscriber extends React.Component {\n  componentDidMount() {\n    fetch(\"/createnewsession\").then(res => res.json()).then(data => this.setState({\n      apiKey: data.apiKey,\n      sessionId: data.sessionId,\n      token: data.token\n    })).catch(err => {\n      console.error('Failed to get session creddentials', err);\n      alert('Failed to get opentok sessionId and token');\n    });\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onSessionError = error => {\n      this.setState({\n        error\n      });\n    };\n\n    this.onSubscribe = () => {\n      console.log('Subscribe Success');\n    };\n\n    this.onSubscribeError = error => {\n      this.setState({\n        error\n      });\n    };\n\n    this.toggleVideo = () => {\n      this.setState(state => ({\n        publishVideo: !state.publishVideo\n      }));\n    };\n\n    this.state = {\n      error: null,\n      connection: 'Connecting',\n      apiKey: \"\",\n      sessionId: \"\",\n      token: \"\"\n    };\n    this.subscriberEventHandlers = {\n      videoEnabled: () => {\n        console.log('Subscriber video enabled');\n      },\n      videoDisabled: () => {\n        console.log('Subscriber video disabled');\n      }\n    };\n    this.componentDidMount();\n  }\n\n  render() {\n    const {\n      apiKey,\n      sessionId,\n      token\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Video\",\n      children: apiKey !== \"\" && sessionId !== \"\" && token !== \"\" && /*#__PURE__*/_jsxDEV(OTSession, {\n        apiKey: apiKey,\n        sessionId: sessionId,\n        token: token,\n        onError: this.onSessionError,\n        eventHandlers: this.sessionEventHandlers,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"OT_subscriber\",\n          children: /*#__PURE__*/_jsxDEV(OTStreams, {\n            children: /*#__PURE__*/_jsxDEV(OTSubscriber, {\n              properties: {\n                width: 700,\n                height: 550\n              },\n              onSubscribe: this.onSubscribe,\n              onError: this.onSubscribeError,\n              eventHandlers: this.subscriberEventHandlers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","OTSubscriber","OTSession","OTStreams","Subscriber","Component","componentDidMount","fetch","then","res","json","data","setState","apiKey","sessionId","token","catch","err","console","error","alert","constructor","props","onSessionError","onSubscribe","log","onSubscribeError","toggleVideo","state","publishVideo","connection","subscriberEventHandlers","videoEnabled","videoDisabled","render","sessionEventHandlers","width","height"],"sources":["/Users/megnabiederman/Desktop/GamerECSAMPLE/client/src/components/Subscriber.js"],"sourcesContent":["import React from 'react';\nimport '../style/Video.css'\nimport { OTSubscriber, OTSession, OTStreams } from 'opentok-react';\n\n\nexport default class Subscriber extends React.Component {\n  componentDidMount(){\n    fetch(\"/createnewsession\")\n      .then((res) => res.json())\n      .then((data) => this.setState({apiKey:data.apiKey, sessionId:data.sessionId, token:data.token}))\n      .catch((err) => {\n        console.error('Failed to get session creddentials', err);\n        alert('Failed to get opentok sessionId and token');\n      });\n      \n  }\n  \n  constructor(props) {\n    super(props);\n    \n    \n    this.state = {\n      error: null,\n      connection: 'Connecting',\n      apiKey:\"\",\n      sessionId:\"\",\n      token:\"\",\n    };\n\n    this.subscriberEventHandlers = {\n        videoEnabled: () => {\n          console.log('Subscriber video enabled');\n        },\n        videoDisabled: () => {\n          console.log('Subscriber video disabled');\n        },\n      };\n      this.componentDidMount();\n    \n    }\n\n    onSessionError = error => {\n      this.setState({ error });\n    };\n  \n    onSubscribe = () => {\n        console.log('Subscribe Success');\n      };\n    \n    onSubscribeError = error => {\n    this.setState({ error });\n    };\n\n    toggleVideo = () => {\n    this.setState(state => ({\n        publishVideo: !state.publishVideo,\n    }));\n    };\n  \nrender() {\n    const { apiKey, sessionId, token } = this.state;\n\n    return (\n      \n      <div className='Video'>\n        {apiKey !== \"\" && sessionId !== \"\" && token !== \"\" && \n        <OTSession\n            apiKey={apiKey}\n            sessionId={sessionId}\n            token={token}\n            onError={this.onSessionError}\n            eventHandlers={this.sessionEventHandlers}\n          >\n            <div className='OT_subscriber'>\n            <OTStreams>\n              \n              <OTSubscriber\n                properties={{ width: 700, height: 550 }}\n                onSubscribe={this.onSubscribe}\n                onError={this.onSubscribeError}\n                eventHandlers={this.subscriberEventHandlers}\n              />\n              \n            </OTStreams>\n            </div>\n\n          </OTSession>\n        }\n      </div>\n        \n\n    )\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,SAAlC,QAAmD,eAAnD;;AAGA,eAAe,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;EACtDC,iBAAiB,GAAE;IACjBC,KAAK,CAAC,mBAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU,KAAKC,QAAL,CAAc;MAACC,MAAM,EAACF,IAAI,CAACE,MAAb;MAAqBC,SAAS,EAACH,IAAI,CAACG,SAApC;MAA+CC,KAAK,EAACJ,IAAI,CAACI;IAA1D,CAAd,CAFlB,EAGGC,KAHH,CAGUC,GAAD,IAAS;MACdC,OAAO,CAACC,KAAR,CAAc,oCAAd,EAAoDF,GAApD;MACAG,KAAK,CAAC,2CAAD,CAAL;IACD,CANH;EAQD;;EAEDC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAwBjBC,cAxBiB,GAwBAJ,KAAK,IAAI;MACxB,KAAKP,QAAL,CAAc;QAAEO;MAAF,CAAd;IACD,CA1BgB;;IAAA,KA4BjBK,WA5BiB,GA4BH,MAAM;MAChBN,OAAO,CAACO,GAAR,CAAY,mBAAZ;IACD,CA9Bc;;IAAA,KAgCjBC,gBAhCiB,GAgCEP,KAAK,IAAI;MAC5B,KAAKP,QAAL,CAAc;QAAEO;MAAF,CAAd;IACC,CAlCgB;;IAAA,KAoCjBQ,WApCiB,GAoCH,MAAM;MACpB,KAAKf,QAAL,CAAcgB,KAAK,KAAK;QACpBC,YAAY,EAAE,CAACD,KAAK,CAACC;MADD,CAAL,CAAnB;IAGC,CAxCgB;;IAIjB,KAAKD,KAAL,GAAa;MACXT,KAAK,EAAE,IADI;MAEXW,UAAU,EAAE,YAFD;MAGXjB,MAAM,EAAC,EAHI;MAIXC,SAAS,EAAC,EAJC;MAKXC,KAAK,EAAC;IALK,CAAb;IAQA,KAAKgB,uBAAL,GAA+B;MAC3BC,YAAY,EAAE,MAAM;QAClBd,OAAO,CAACO,GAAR,CAAY,0BAAZ;MACD,CAH0B;MAI3BQ,aAAa,EAAE,MAAM;QACnBf,OAAO,CAACO,GAAR,CAAY,2BAAZ;MACD;IAN0B,CAA/B;IAQE,KAAKnB,iBAAL;EAED;;EAoBL4B,MAAM,GAAG;IACL,MAAM;MAAErB,MAAF;MAAUC,SAAV;MAAqBC;IAArB,IAA+B,KAAKa,KAA1C;IAEA,oBAEE;MAAK,SAAS,EAAC,OAAf;MAAA,UACGf,MAAM,KAAK,EAAX,IAAiBC,SAAS,KAAK,EAA/B,IAAqCC,KAAK,KAAK,EAA/C,iBACD,QAAC,SAAD;QACI,MAAM,EAAEF,MADZ;QAEI,SAAS,EAAEC,SAFf;QAGI,KAAK,EAAEC,KAHX;QAII,OAAO,EAAE,KAAKQ,cAJlB;QAKI,aAAa,EAAE,KAAKY,oBALxB;QAAA,uBAOI;UAAK,SAAS,EAAC,eAAf;UAAA,uBACA,QAAC,SAAD;YAAA,uBAEE,QAAC,YAAD;cACE,UAAU,EAAE;gBAAEC,KAAK,EAAE,GAAT;gBAAcC,MAAM,EAAE;cAAtB,CADd;cAEE,WAAW,EAAE,KAAKb,WAFpB;cAGE,OAAO,EAAE,KAAKE,gBAHhB;cAIE,aAAa,EAAE,KAAKK;YAJtB;cAAA;cAAA;cAAA;YAAA;UAFF;YAAA;YAAA;YAAA;UAAA;QADA;UAAA;UAAA;UAAA;QAAA;MAPJ;QAAA;QAAA;QAAA;MAAA;IAFF;MAAA;MAAA;MAAA;IAAA,QAFF;EA8BD;;AAvFqD"},"metadata":{},"sourceType":"module"}