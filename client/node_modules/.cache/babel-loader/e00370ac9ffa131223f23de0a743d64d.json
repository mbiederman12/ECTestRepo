{"ast":null,"code":"var _jsxFileName = \"/Users/megnabiederman/Desktop/GamerECSAMPLE/client/src/Stream.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { OTSession, OTPublisher, OTStreams, OTSubscriber } from 'opentok-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Stream() {\n  _s();\n\n  const [data, setData] = React.useState(null);\n  React.useEffect(() => {\n    fetch(\"/api\").then(res => res.json()).then(data => setData(data)).catch(err => {\n      console.error('Failed to get session creddentials', err);\n      alert('Failed to get opentok sessionId and token');\n    });\n  }, []);\n  render();\n  {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(OTSession, {\n        apiKey: data.apiKey,\n        sessionId: data.sessionId,\n        token: data.token,\n        children: [/*#__PURE__*/_jsxDEV(OTPublisher, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(OTStreams, {\n          children: /*#__PURE__*/_jsxDEV(OTSubscriber, {\n            properties: {\n              width: 100,\n              height: 100\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Stream, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = Stream;\nexport default Stream;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stream\");","map":{"version":3,"names":["React","OTSession","OTPublisher","OTStreams","OTSubscriber","Stream","data","setData","useState","useEffect","fetch","then","res","json","catch","err","console","error","alert","render","apiKey","sessionId","token","width","height"],"sources":["/Users/megnabiederman/Desktop/GamerECSAMPLE/client/src/Stream.js"],"sourcesContent":["import React from \"react\";\nimport { OTSession, OTPublisher, OTStreams, OTSubscriber } from 'opentok-react';\n\nfunction Stream(){\n  const [data, setData] = React.useState(null);\n\n  React.useEffect(() => {\n    fetch(\"/api\")\n      .then((res) => res.json())\n      .then((data) => setData(data))\n      .catch((err) => {\n        console.error('Failed to get session creddentials', err);\n        alert('Failed to get opentok sessionId and token');\n      });\n      \n  }, []);\n\n  render()\n  {\n    return(\n      <div>\n          <OTSession\n            apiKey={data.apiKey}\n            sessionId={data.sessionId}\n            token={data.token}\n          >\n            <OTPublisher\n      \n            />\n            <OTStreams>\n              <OTSubscriber\n                properties={{ width: 100, height: 100 }}\n              />\n            </OTStreams>\n          </OTSession>\n        </div>\n    );\n  }\n}\nexport default Stream"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,EAA4CC,YAA5C,QAAgE,eAAhE;;;AAEA,SAASC,MAAT,GAAiB;EAAA;;EACf,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACQ,QAAN,CAAe,IAAf,CAAxB;EAEAR,KAAK,CAACS,SAAN,CAAgB,MAAM;IACpBC,KAAK,CAAC,MAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESL,IAAD,IAAUC,OAAO,CAACD,IAAD,CAFzB,EAGGQ,KAHH,CAGUC,GAAD,IAAS;MACdC,OAAO,CAACC,KAAR,CAAc,oCAAd,EAAoDF,GAApD;MACAG,KAAK,CAAC,2CAAD,CAAL;IACD,CANH;EAQD,CATD,EASG,EATH;EAWAC,MAAM;EACN;IACE,oBACE;MAAA,uBACI,QAAC,SAAD;QACE,MAAM,EAAEb,IAAI,CAACc,MADf;QAEE,SAAS,EAAEd,IAAI,CAACe,SAFlB;QAGE,KAAK,EAAEf,IAAI,CAACgB,KAHd;QAAA,wBAKE,QAAC,WAAD;UAAA;UAAA;UAAA;QAAA,QALF,eAQE,QAAC,SAAD;UAAA,uBACE,QAAC,YAAD;YACE,UAAU,EAAE;cAAEC,KAAK,EAAE,GAAT;cAAcC,MAAM,EAAE;YAAtB;UADd;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QARF;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADF;EAkBD;AACF;;GAnCQnB,M;;KAAAA,M;AAoCT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}