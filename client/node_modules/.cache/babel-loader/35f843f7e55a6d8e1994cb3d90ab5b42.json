{"ast":null,"code":"var _jsxFileName = \"/Users/megnabiederman/Desktop/GamerECSAMPLE/client/src/components/Publisher.js\";\nimport React from 'react';\nimport './style/Backstage.css';\nimport { OTPublisher } from 'opentok-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Publisher extends React.Component {\n  componentDidMount() {\n    fetch(\"/api\").then(res => res.json()).then(data => this.setState({\n      apiKey: data.apiKey,\n      sessionId: data.sessionId,\n      token: data.token\n    })).catch(err => {\n      console.error('Failed to get session creddentials', err);\n      alert('Failed to get opentok sessionId and token');\n    });\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onSessionError = error => {\n      this.setState({\n        error\n      });\n    };\n\n    this.onPublish = () => {\n      console.log('Publish Success');\n    };\n\n    this.onPublishError = error => {\n      this.setState({\n        error\n      });\n    };\n\n    this.toggleVideo = () => {\n      this.setState(state => ({\n        publishVideo: !state.publishVideo\n      }));\n    };\n\n    this.state = {\n      error: null,\n      connection: 'Connecting',\n      publishVideo: true,\n      apiKey: \"\",\n      sessionId: \"\",\n      token: \"\"\n    };\n    this.publisherEventHandlers = {\n      accessDenied: () => {\n        console.log('User denied access to media source');\n      },\n      streamCreated: () => {\n        console.log('Publisher stream created');\n      },\n      streamDestroyed: _ref => {\n        let {\n          reason\n        } = _ref;\n        console.log(`Publisher stream destroyed because: ${reason}`);\n      }\n    };\n    this.componentDidMount();\n  }\n\n  render() {\n    const {\n      apiKey,\n      sessionId,\n      token,\n      publishVideo\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: apiKey !== \"\" && sessionId !== \"\" && token !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"OT_publisher\",\n        children: [/*#__PURE__*/_jsxDEV(OTPublisher, {\n          properties: {\n            publishVideo,\n            width: 150,\n            height: 120\n          },\n          onPublish: this.onPublish,\n          onError: this.onPublishError,\n          eventHandlers: this.publisherEventHandlers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"videoButton\",\n          onClick: this.toggleVideo,\n          children: [publishVideo ? 'Disable' : 'Enable', \" Video\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","OTPublisher","Publisher","Component","componentDidMount","fetch","then","res","json","data","setState","apiKey","sessionId","token","catch","err","console","error","alert","constructor","props","onSessionError","onPublish","log","onPublishError","toggleVideo","state","publishVideo","connection","publisherEventHandlers","accessDenied","streamCreated","streamDestroyed","reason","render","width","height"],"sources":["/Users/megnabiederman/Desktop/GamerECSAMPLE/client/src/components/Publisher.js"],"sourcesContent":["import React from 'react';\nimport './style/Backstage.css'\nimport { OTPublisher } from 'opentok-react';\n\n\nexport default class Publisher extends React.Component {\n  componentDidMount(){\n    fetch(\"/api\")\n      .then((res) => res.json())\n      .then((data) => this.setState({apiKey:data.apiKey, sessionId:data.sessionId, token:data.token}))\n      .catch((err) => {\n        console.error('Failed to get session creddentials', err);\n        alert('Failed to get opentok sessionId and token');\n      });\n      \n  }\n  \n  constructor(props) {\n    super(props);\n    \n    \n    this.state = {\n      error: null,\n      connection: 'Connecting',\n      publishVideo: true,\n      apiKey:\"\",\n      sessionId:\"\",\n      token:\"\",\n    };\n\n    this.publisherEventHandlers = {\n      accessDenied: () => {\n        console.log('User denied access to media source');\n      },\n      streamCreated: () => {\n        console.log('Publisher stream created');\n      },\n      streamDestroyed: ({ reason }) => {\n        console.log(`Publisher stream destroyed because: ${reason}`);\n      },\n    };\n    this.componentDidMount();\n\n    }\n\n    onSessionError = error => {\n      this.setState({ error });\n    };\n  \n    onPublish = () => {\n      console.log('Publish Success');\n    };\n  \n    onPublishError = error => {\n      this.setState({ error });\n    };\n  \n  toggleVideo = () => {\n    this.setState(state => ({\n      publishVideo: !state.publishVideo,\n    }));\n  };\n  \nrender() {\n    const { apiKey, sessionId, token, publishVideo } = this.state;\n\n    return (\n      \n      <div>\n        {apiKey !== \"\" && sessionId !== \"\" && token !== \"\" && \n\n        <div className='OT_publisher'>\n        <OTPublisher\n          properties={{ publishVideo, width:150,height:120 }}\n          onPublish={this.onPublish}\n          onError={this.onPublishError}\n          eventHandlers={this.publisherEventHandlers}\n        />\n    \n        <button id=\"videoButton\" onClick={this.toggleVideo}>\n        {publishVideo ? 'Disable' : 'Enable'} Video\n        </button>\n        </div>\n        }\n      </div>\n        \n\n    )\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAGA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;EACrDC,iBAAiB,GAAE;IACjBC,KAAK,CAAC,MAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU,KAAKC,QAAL,CAAc;MAACC,MAAM,EAACF,IAAI,CAACE,MAAb;MAAqBC,SAAS,EAACH,IAAI,CAACG,SAApC;MAA+CC,KAAK,EAACJ,IAAI,CAACI;IAA1D,CAAd,CAFlB,EAGGC,KAHH,CAGUC,GAAD,IAAS;MACdC,OAAO,CAACC,KAAR,CAAc,oCAAd,EAAoDF,GAApD;MACAG,KAAK,CAAC,2CAAD,CAAL;IACD,CANH;EAQD;;EAEDC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KA4BjBC,cA5BiB,GA4BAJ,KAAK,IAAI;MACxB,KAAKP,QAAL,CAAc;QAAEO;MAAF,CAAd;IACD,CA9BgB;;IAAA,KAgCjBK,SAhCiB,GAgCL,MAAM;MAChBN,OAAO,CAACO,GAAR,CAAY,iBAAZ;IACD,CAlCgB;;IAAA,KAoCjBC,cApCiB,GAoCAP,KAAK,IAAI;MACxB,KAAKP,QAAL,CAAc;QAAEO;MAAF,CAAd;IACD,CAtCgB;;IAAA,KAwCnBQ,WAxCmB,GAwCL,MAAM;MAClB,KAAKf,QAAL,CAAcgB,KAAK,KAAK;QACtBC,YAAY,EAAE,CAACD,KAAK,CAACC;MADC,CAAL,CAAnB;IAGD,CA5CkB;;IAIjB,KAAKD,KAAL,GAAa;MACXT,KAAK,EAAE,IADI;MAEXW,UAAU,EAAE,YAFD;MAGXD,YAAY,EAAE,IAHH;MAIXhB,MAAM,EAAC,EAJI;MAKXC,SAAS,EAAC,EALC;MAMXC,KAAK,EAAC;IANK,CAAb;IASA,KAAKgB,sBAAL,GAA8B;MAC5BC,YAAY,EAAE,MAAM;QAClBd,OAAO,CAACO,GAAR,CAAY,oCAAZ;MACD,CAH2B;MAI5BQ,aAAa,EAAE,MAAM;QACnBf,OAAO,CAACO,GAAR,CAAY,0BAAZ;MACD,CAN2B;MAO5BS,eAAe,EAAE,QAAgB;QAAA,IAAf;UAAEC;QAAF,CAAe;QAC/BjB,OAAO,CAACO,GAAR,CAAa,uCAAsCU,MAAO,EAA1D;MACD;IAT2B,CAA9B;IAWA,KAAK7B,iBAAL;EAEC;;EAoBL8B,MAAM,GAAG;IACL,MAAM;MAAEvB,MAAF;MAAUC,SAAV;MAAqBC,KAArB;MAA4Bc;IAA5B,IAA6C,KAAKD,KAAxD;IAEA,oBAEE;MAAA,UACGf,MAAM,KAAK,EAAX,IAAiBC,SAAS,KAAK,EAA/B,IAAqCC,KAAK,KAAK,EAA/C,iBAED;QAAK,SAAS,EAAC,cAAf;QAAA,wBACA,QAAC,WAAD;UACE,UAAU,EAAE;YAAEc,YAAF;YAAgBQ,KAAK,EAAC,GAAtB;YAA0BC,MAAM,EAAC;UAAjC,CADd;UAEE,SAAS,EAAE,KAAKd,SAFlB;UAGE,OAAO,EAAE,KAAKE,cAHhB;UAIE,aAAa,EAAE,KAAKK;QAJtB;UAAA;UAAA;UAAA;QAAA,QADA,eAQA;UAAQ,EAAE,EAAC,aAAX;UAAyB,OAAO,EAAE,KAAKJ,WAAvC;UAAA,WACCE,YAAY,GAAG,SAAH,GAAe,QAD5B;QAAA;UAAA;UAAA;UAAA;QAAA,QARA;MAAA;QAAA;QAAA;QAAA;MAAA;IAHF;MAAA;MAAA;MAAA;IAAA,QAFF;EAsBD;;AAnFoD"},"metadata":{},"sourceType":"module"}